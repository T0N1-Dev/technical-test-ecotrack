@use './variables' as *;

// Container
@mixin container {
  width: 100%;
  max-width: $container-max-width;
  margin-left: auto;
  margin-right: auto;
}

// Flexbox
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// Typography
@mixin heading-1 {
  font-size: 3rem;
  font-weight: 700;
  line-height: 1.2;
  
  @media (max-width: $breakpoint-md) {
    font-size: 2.5rem;
  }
}

@mixin heading-2 {
  font-size: 2.5rem;
  font-weight: 700;
  line-height: 1.2;
  
  @media (max-width: $breakpoint-md) {
    font-size: 2rem;
  }
}

@mixin heading-3 {
  font-size: 2rem;
  font-weight: 600;
  line-height: 1.3;
  
  @media (max-width: $breakpoint-md) {
    font-size: 1.75rem;
  }
}

@mixin heading-4 {
  font-size: 1.5rem;
  font-weight: 600;
  line-height: 1.4;
  
  @media (max-width: $breakpoint-md) {
    font-size: 1.25rem;
  }
}

// Responsive
@mixin responsive($breakpoint) {
  @if $breakpoint == xs {
    @media (min-width: $breakpoint-xs) { @content; }
  } @else if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) { @content; }
  } @else if $breakpoint == md {
    @media (min-width: $breakpoint-md) { @content; }
  } @else if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) { @content; }
  } @else if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) { @content; }
  } @else if $breakpoint == xxl {
    @media (min-width: $breakpoint-xxl) { @content; }
  }
}

// Truncate text
@mixin truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Multi-line truncate
@mixin truncate-lines($lines) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Buttons
@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.5rem 1rem;
  font-weight: 500;
  border-radius: $border-radius;
  transition: $transition-base;
  cursor: pointer;
  border: none;
  font-family: inherit;
}

@mixin button-primary {
  @include button-base;
  background-color: var(--primary-color);
  color: white;
  
  &:hover {
    background-color: var(--primary-dark);
  }
}

@mixin button-secondary {
  @include button-base;
  background-color: var(--secondary-color);
  color: white;
  
  &:hover {
    background-color: var(--secondary-dark);
  }
}

@mixin button-outline {
  @include button-base;
  background-color: transparent;
  border: 1px solid var(--primary-color);
  color: var(--primary-color);
  
  &:hover {
    background-color: var(--primary-color);
    color: white;
  }
}

// Cards
@mixin card {
  background-color: var(--card-bg);
  border-radius: $border-radius;
  box-shadow: $shadow-md;
  padding: 1.5rem;
  transition: $transition-base;
}

// Animations
@mixin fade-in {
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  
  animation: fadeIn 0.3s ease-in-out;
}

@mixin slide-in-up {
  @keyframes slideInUp {
    from {
      transform: translateY(20px);
      opacity: 0;
    }
    to {
      transform: translateY(0);
      opacity: 1;
    }
  }
  
  animation: slideInUp 0.4s ease-out;
}
